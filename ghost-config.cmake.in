#include("${CMAKE_CURRENT_LIST_DIR}/GHOST-targets.cmake")
set(GHOST_INCLUDE_DIRS @CMAKE_INSTALL_PREFIX@/include @HWLOC_INCLUDE_DIR@ @CUDA_INCLUDE_DIRS@)

if (@BUILD_SHARED_LIBS@ STREQUAL "ON")
    set(GHOST_LIBRARIES @CMAKE_INSTALL_PREFIX@/lib/ghost/libghost.so -lpthread)
else()
    set(GHOST_LIBRARIES @CMAKE_INSTALL_PREFIX@/lib/ghost/libghost.a -lpthread)
endif()
set(GHOST_LIBDIR "${CMAKE_CURRENT_LIST_DIR}")


# set default paths for libraries
set(HWLOC_LIBRARIES @HWLOC_LIBRARIES@ CACHE STRING "hwloc libraries (required by @CMAKE_PROJECT_NAME@)")
set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${HWLOC_LIBRARIES})

if (@GHOST_HAVE_SCOTCH@)
    set(SCOTCH_LIBRARIES @SCOTCH_LIBRARIES@ CACHE STRING "Scotch libraries (required by @CMAKE_PROJECT_NAME@)")
    set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${SCOTCH_LIBRARIES})
endif()

if (@GHOST_HAVE_COLPACK@)
    set(COLPACK_LIBRARIES @COLPACK_LIBRARIES@ CACHE STRING "ColPack libraries (required by @CMAKE_PROJECT_NAME@)")
    set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${COLPACK_LIBRARIES})
endif()

if (@GHOST_HAVE_LAPACK@)
    set(LAPACK_LIBRARIES @LAPACK_LIBRARIES@ CACHE STRING "LAPACK libraries (required by @CMAKE_PROJECT_NAME@)")
    set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${LAPACK_LIBRARIES})
endif()

if (@GHOST_HAVE_INSTR_LIKWID@)
    set(LIKWID_LIBRARIES @LIKWID_LIBRARIES@ CACHE STRING "Likwid libraries (required by @CMAKE_PROJECT_NAME@)")
    set(LIKWID_INCLUDE_DIR @LIKWID_INCLUDE_DIR@)
    set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${LIKWID_LIBRARIES})
    set(GHOST_INCLUDE_DIRS ${GHOST_INCLUDE_DIRS} @LIKWID_INCLUDE_DIR@)
endif()

if (@GHOST_HAVE_MPI@)
    set(MPI_INCDIR @MPI_INCLUDE_PATH@ CACHE PATH "MPI include dir")
    set(MPI_LIBRARIES @MPI_LIBRARIES@ CACHE STRING "MPI libraries (required by @CMAKE_PROJECT_NAME@)")
    include_directories(${MPI_INCDIR})
    set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${MPI_LIBRARIES})
endif()

set(BLAS_LIBRARIES @BLAS_LIBRARIES@ CACHE STRING "BLAS libraries (required by @CMAKE_PROJECT_NAME@)")
set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${BLAS_LIBRARIES})

if (@GHOST_HAVE_CUDA@)
    set(CUDA_LIBRARIES @CUDA_LIBRARIES@ CACHE STRING "CUDA libraries (required by @CMAKE_PROJECT_NAME@)")
    set(GHOST_LIBRARIES ${GHOST_LIBRARIES} ${CUDA_LIBRARIES})
endif()

if (@GHOST_HAVE_OPENMP@)
    set(GHOST_C_FLAGS "${GHOST_C_FLAGS} @OpenMP_C_FLAGS@")
    set(GHOST_CXX_FLAGS "${GHOST_CXX_FLAGS} @OpenMP_CXX_FLAGS@")
    set(GHOST_Fortran_FLAGS "${GHOST_Fortran_FLAGS} @OpenMP_F_FLAGS@")
endif()

if (@GHOST_HAVE_MIC@)
    set(GHOST_C_FLAGS "${GHOST_C_FLAGS} -mmic")
    set(GHOST_CXX_FLAGS "${GHOST_CXX_FLAGS} -mmic")
    set(GHOST_Fortran_FLAGS "${GHOST_Fortran_FLAGS} -mmic")
    get_filename_component(MIC_COMPILER_LIBDIR ${CMAKE_C_COMPILER}/../../../compiler/lib/mic REALPATH)
    set(GHOST_C_FLAGS "${GHOST_C_FLAGS} -Wl,-rpath,${MIC_COMPILER_LIBDIR}")
    set(GHOST_CXX_FLAGS "${GHOST_CXX_FLAGS} -Wl,-rpath,${MIC_COMPILER_LIBDIR}")
endif()
