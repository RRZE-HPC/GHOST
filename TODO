=> Hybrid CPU/GPU version:
      remote communication -- remote computation  
  __/
    \
      copy local part to GPU -- local computation

=> Introduce binary format for big matrices
  nRows  => unsigned long long int     (= 64 bit)
  nCols  => unsigned long long int
  rowPtr => unsigned long long int *
  colIdx => unsigned long long int

=> Create testing script
  - build library with very strict options, report warnings
  - create application taking the options as an argument
  - iterate over all sane permutations of options bits
     -> sanity check in init()?
  - build library for all valid data types
  - create small(ish) test matrices covering many cases
  - automatically submit jobs to lima and tinygpu
  - send report as e-mail

=> Check whether matrix fits in memory

=> LIKWID_MARKER/_FINE ==> LIKWID_PERFMON
  - also: likwid_* calls to LIKWID_*

=> Export OPENCL makro

=> Generate dependency files in Makefile

=> all OpenCL arrays mapped memory

=> different data types for matrix and vectors
  - works BUT does useless flops (mults with zero)

=> replace 0 to SPMVM_MPI_ROOT everywhere

=> replace MPI_COMM_WORLD with custom communicator everywhere
