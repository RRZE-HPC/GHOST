#define PASTE(name, type) type ##_## name
#define FUNCTION_NAME(name, type) PASTE(name, type)

static void FUNCTION_NAME(BJDS_kernel_plain,prefix) (ghost_mat_t *mat, ghost_vec_t * lhs, ghost_vec_t * rhs, int options)
{
	vecdt *rhsv = (vecdt *)(rhs->val);	
	vecdt *lhsv = (vecdt *)(lhs->val);	
	ghost_midx_t i, j, c;
	vecdt tmp[BJDS_LEN];
	BJDS_TYPE *bjds = BJDS(mat);

#pragma omp parallel for schedule(runtime) private(j,tmp,i)
	for (c=0; c<bjds->nrowsPadded/BJDS_LEN; c++) 
	{ // loop over chunks
		for (i=0; i<BJDS_LEN; i++)
		{
			tmp[i] = 0;
		}

		for (j=0; j<(bjds->chunkStart[c+1]-bjds->chunkStart[c])/BJDS_LEN; j++) 
		{ // loop inside chunk
			for (i=0; i<BJDS_LEN; i++)
			{
				tmp[i] += (vecdt)bjds->val[bjds->chunkStart[c]+j*BJDS_LEN+i] * rhsv[bjds->col[bjds->chunkStart[c]+j*BJDS_LEN+i]];
			}

		}
		for (i=0; i<BJDS_LEN; i++)
		{
			if (c*BJDS_LEN+i < bjds->nrows) {
				if (options & GHOST_SPMVM_AXPY)
					lhsv[c*BJDS_LEN+i] += tmp[i];
				else
					lhsv[c*BJDS_LEN+i] = tmp[i];
			}

		}
	}
}

