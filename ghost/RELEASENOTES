2013 - 06 - xx  Moritz Kreutzer  <moritz.kreutzer@fau.de>

	Release Version 0.3


	+ The whole X-macro and run-time linking stuff for mixed data types has 
		been removed. 
		Reason: The old approach was very complex and the code readability and
		maintainability suffered.
		Now, a _careful_ use of C++ templates does the work.
		Templates for the data types and the SELL chunk height are the only 
		C++ feature used (no overloaded operators, stl::vectors and so on) and
		only the necessary functions have been implemented in C++.
		The use of C++ should stay as small as possible because a plain C wrapper
		is needed anyways for Fortran compatibility.

	+ As ELLPACK is only a special case of SELL (now: "SELL" (Sliced ELLPACK)), it
		has completely been integrated into the SELL code.

	+ The chunk height for SELL can now be set at runtime. This should enable 
		easier set-up for hybrid machines as the optimal chunk height depends on
		the architecture. It is also possible to let the chunkheight be auto-
		matically detected by ghost at runtime, depending on the datatype and
		architecture.

	+ A shift can now be added to a matrix. At the time of the SpMVM call, it can
   		be selected whether to apply the shift which would yield: y <- y + (A+s)*x.
		There is currently _no_ CUDA version for this (only CPU and OpenCL).

	+ A first implementation of tasking is available. The most important function
		calls are ghost_spawnTask(ghost_task_t *) and ghost_waitTas(ghost_task_t *).
		Tasks can be either synchronous (no ghost_waitTask() neede) or asynchronous.




2013 - 04 - 26  Moritz Kreutzer  <moritz.kreutzer@fau.de>
	
	Release Version 0.2


	+ Arbitrary data types at runtime (currently only test with CRS for CPUs 
		and SELL for CUDA)

	+ Initial Fortran support (thanks to Jonas)

	+ Initial support for the IBM Power architecture

	+ Vectors:
		+ Vectors now have a 'class-like' structure just as matrices
		+ Added vector I/O
		+ Added several initialization functions: fromScalar, fromFunc, 
			fromFile, fromRand
		+ Generalization of vectors to multi-vectors (further generaliztation
			to dense matrices to come)

	+ De-coupling of matrix from context

	+ MPI-enabled operations
		+ spMVM
		+ dot product
		+ normalize vector

	+ CUDA+MPI-enabled operations
		+ spMVM

	+ Utility functions
		+ ghost_pinThreads
		+ ghost_printMatrixInfo
		- ghost_printOptionsInfo

	+ Utility macros
		+ Manage data types: GHOST_REGISTER_DT_S/D/Z/C
		+ Create matrix/vector traits: GHOST_M/VTRAITS_INIT

	+ Many bugfixes and small improvements (check git log for details)



2013 - 01 - 15  Moritz Kreutzer  <moritz.kreutzer@fau.de>
	
	Release Version 0.1a


	+ Initial release
