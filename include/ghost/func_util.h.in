/**
 * @file func_util.h
 * @brief Utilities for functions.
 * @author Moritz Kreutzer <moritz.kreutzer@fau.de>
 */
#ifndef GHOST_FUNC_UTIL_H
#define GHOST_FUNC_UTIL_H

typedef enum
{
    GHOST_FUNCTYPE_MATH = 1,
    GHOST_FUNCTYPE_UTIL = 2,
    GHOST_FUNCTYPE_COMMUNICATION = 4,
    GHOST_FUNCTYPE_PREPROCESS = 8,
    GHOST_FUNCTYPE_INITIALIZATION = 16,
    GHOST_FUNCTYPE_KERNEL = 32,
} ghost_functype_t;

#define GHOST_FUNC_ENTER(functype)\
    int __funcnameoffset = strncmp(__FUNCTION__,"ghost_",6)?0:6;\
    bool __ghost_instr_enable_backup = ghost_instr_enable;\
    if (${INSTRUMENTATION_FUNCTYPES}) {\
        ghost_instr_enable = true;\
        GHOST_INSTR_START(__FUNCTION__+__funcnameoffset);\
    } else {\
        ghost_instr_enable = false;\
    }\
    char * __prefixbackup = ghost_instr_prefix_get();\
    char __prefix[256];\
    snprintf(__prefix,256,"%s%s->",__prefixbackup,\
            __FUNCTION__+__funcnameoffset);\
    ghost_instr_prefix_set(__prefix);\

#define GHOST_FUNC_EXIT(functype)\
    ghost_instr_prefix_set(__prefixbackup);\
    if (${INSTRUMENTATION_FUNCTYPES}) {\
        GHOST_INSTR_STOP(__FUNCTION__+__funcnameoffset);\
    }\
    ghost_instr_enable = __ghost_instr_enable_backup;

#endif
